---
- name: Resetting User password
  hosts: "{{ target }}" 
  gather_facts: no
  ignore_unreachable: yes
  vars:
    - ansible_python_interpreter: auto_silent
    - ansible_python_interpreter: /usr/bin/python
    - myusers: ['awxadm', 'root', 'inampk48']
  tasks:
    - name: Checking if {{ user }} user exists
      shell: id -u {{ user }}
      register: user_exists
      ignore_errors: true
    - name:  Message
      debug:
        msg: "{{ user }} is a generic account. DO NOT ATTEMPT TO RESET THIS ACCOUNT!"
      when: user in myusers
    - name: Reseting {{ user }} password
      shell: "echo \"{{ user }}:{{ password }}\"|sudo /usr/sbin/chpasswd"
      when: user_exists.rc == 0 and (inventory_hostname in groups['linux'] or inventory_hostname in groups['sap_linux'] or inventory_hostname in groups['dba_linux'])  and (user not in myusers)
    - name: Resetting {{ user }} password on AIX servers
      shell: "echo \"{{ user }}:{{ password }}\"|sudo chpasswd -c"
      when: user_exists.rc == 0 and (inventory_hostname in groups['aix'] or inventory_hostname in groups['sap_aix'] or inventory_hostname in groups['dba_aix'])  and (user not in myusers)
    - name: Resetting failed login count on AIX
      shell: "chuser unsuccessful_login_count=0 {{ user }}"
      when: user_exists.rc == 0 and (inventory_hostname in groups['aix'] or inventory_hostname in groups['sap_aix'] or inventory_hostname in groups['dba_aix'])  and (user not in myusers)
    - name: Message
      debug:
        msg: "{{ user }} doesnot exist"
      when: user_exists.rc != 0
